{
  "kind": "collectionType",
  "collectionName": "up_users",
  "info": {
    "name": "user",
    "description": "",
    "singularName": "user",
    "pluralName": "users",
    "displayName": "User"
  },
  "options": {
    "draftAndPublish": false,
    "timestamps": true
  },
  "attributes": {
    "username": {
      "type": "string",
      "minLength": 3,
      "unique": true,
      "configurable": false,
      "required": true
    },
    "email": {
      "type": "email",
      "minLength": 6,
      "configurable": false,
      "required": true
    },
    "provider": {
      "type": "string",
      "configurable": false
    },
    "password": {
      "type": "password",
      "minLength": 6,
      "configurable": false,
      "private": true
    },
    "resetPasswordToken": {
      "type": "string",
      "configurable": false,
      "private": true
    },
    "confirmationToken": {
      "type": "string",
      "configurable": false,
      "private": true
    },
    "confirmed": {
      "type": "boolean",
      "default": false,
      "configurable": false
    },
    "blocked": {
      "type": "boolean",
      "default": false,
      "configurable": false
    },
    "role": {
      "type": "relation",
      "relation": "manyToOne",
      "target": "plugin::users-permissions.role",
      "inversedBy": "users",
      "configurable": false
    },
    "usercards": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::usercard.usercard",
      "mappedBy": "user"
    },
    "communityactions": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::communityaction.communityaction",
      "mappedBy": "user"
    },
    "orders": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::order.order",
      "mappedBy": "user"
    },
    "stars": {
      "type": "integer",
      "default": 0
    },
    "streak": {
      "default": 0,
      "type": "integer"
    },
    "energy": {
      "type": "integer",
      "default": 3
    },
    "highest_buddy_shares": {
      "type": "integer"
    },
    "highest_streak_count": {
      "type": "integer"
    },
    "max_energy": {
      "type": "integer",
      "default": 3
    },
    "level": {
      "type": "integer",
      "default": 1
    },
    "friendrewards": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::friendreward.friendreward"
    },
    "levelrewards": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::levelreward.levelreward"
    },
    "streakrewards": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::streakreward.streakreward"
    },
    "shared_by": {
      "type": "relation",
      "relation": "manyToOne",
      "target": "plugin::users-permissions.user",
      "inversedBy": "shared_buddies"
    },
    "shared_buddies": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "plugin::users-permissions.user",
      "mappedBy": "shared_by"
    },
    "last_unlocked_cards": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::card.card"
    },
    "last_completed_cards": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::card.card"
    },
    "pro": {
      "type": "boolean",
      "default": false
    },
    "followers": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "plugin::users-permissions.user",
      "inversedBy": "followedBy"
    },
    "followedBy": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "plugin::users-permissions.user",
      "inversedBy": "followers"
    },
    "rewards_tower": {
      "type": "json"
    },
    "objectives_json": {
      "type": "json"
    },
    "streak_rewards": {
      "type": "json"
    },
    "friends_rewards": {
      "type": "json"
    },
    "reset_date": {
      "type": "string"
    },
    "xp": {
      "type": "integer",
      "default": 0
    },
    "usercourses": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::usercourse.usercourse",
      "mappedBy": "users_permissions_user"
    },
    "review": {
      "type": "relation",
      "relation": "oneToOne",
      "target": "api::review.review",
      "inversedBy": "users_permissions_user"
    },
    "actions": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::action.action",
      "mappedBy": "user"
    },
    "favorite_actions": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::action.action"
    },
    "artifacts": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::artifact.artifact"
    },
    "stats": {
      "type": "json"
    },
    "favorite_cards": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::card.card"
    },
    "last_completed_actions": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::action.action"
    },
    "claimed_artifacts": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::artifact.artifact"
    },
    "avatar": {
      "type": "relation",
      "relation": "oneToOne",
      "target": "api::avatar.avatar"
    },
    "is_referral_accepted": {
      "type": "boolean",
      "default": false
    },
    "reset_week_date": {
      "type": "biginteger"
    },
    "card_tickets": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::card.card"
    },
    "action_tickets": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::action.action"
    },
    "is_notify_me": {
      "type": "boolean"
    },
    "age": {
      "type": "integer"
    },
    "gender": {
      "type": "string"
    },
    "mail_send_count": {
      "type": "integer"
    },
    "xpLimit": {
      "type": "integer",
      "default": 300
    },
    "email_preferences": {
      "type": "json"
    },
    "unlocked_cards": {
      "type": "json"
    },
    "savedCasestudies": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::casestudy.casestudy"
    },
    "savedExercises": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::exercise.exercise"
    },
    "savedExperiments": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::experiment.experiment"
    },
    "savedExpertopinions": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::expertopinion.expertopinion"
    },
    "savedFaq": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::faq.faq"
    },
    "savedIdeas": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::idea.idea"
    },
    "savedMetaphors": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::metaphore.metaphore"
    },
    "savedQestions": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::question.question"
    },
    "savedQuotes": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::quote.quote"
    },
    "savedStories": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::story.story"
    },
    "savedTips": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::tip.tip"
    },
    "droppedContent": {
      "type": "json"
    },
    "tutorial": {
      "type": "json"
    },
    "faq_rewards": {
      "type": "json"
    }
  }
}
